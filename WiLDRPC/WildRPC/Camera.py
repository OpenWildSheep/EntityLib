# automatically generated by the FlatBuffers compiler, do not modify

# namespace: WildRPC

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Camera(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCamera(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Camera()
        x.Init(buf, n + offset)
        return x

    # Camera
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Camera
    def Position(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from WildRPC.Position import Position
            obj = Position()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Camera
    def Orientation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from WildRPC.Quat import Quat
            obj = Quat()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def CameraStart(builder): builder.StartObject(2)
def CameraAddPosition(builder, position): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(position), 0)
def CameraAddOrientation(builder, orientation): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(orientation), 0)
def CameraEnd(builder): return builder.EndObject()
