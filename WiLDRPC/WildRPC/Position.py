# automatically generated by the FlatBuffers compiler, do not modify

# namespace: WildRPC

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Position(object):
    __slots__ = ['_tab']

    # Position
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Position
    def WorldCellX(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # Position
    def WorldCellY(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # Position
    def LocalPosition(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 8)
        return obj


def CreatePosition(builder, worldCellX, worldCellY, localPosition_x, localPosition_y, localPosition_z):
    builder.Prep(4, 20)
    builder.Prep(4, 12)
    builder.PrependFloat32(localPosition_z)
    builder.PrependFloat32(localPosition_y)
    builder.PrependFloat32(localPosition_x)
    builder.PrependUint32(worldCellY)
    builder.PrependUint32(worldCellX)
    return builder.Offset()
